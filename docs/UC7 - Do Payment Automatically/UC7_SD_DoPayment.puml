@startuml
autonumber

participant "task\n:DoPaymentTask" as TASK
participant "Platform" as P
participant "rFree\n:RegisterFreelancer" as RF
participant "lt\n:TaskList" as LT
participant "ts :Task" as T
participant "amountsET\n: List<Task>" as LTS
participant "f\n:Freelancer" as F
participant "Receipt" as R

[o-> TASK : DoPayment(ltNotPayed)
activate TASK


TASK -> P : rFree = getRegisterFreelancer()
activate P
deactivate P
TASK -> RF : lf = getFreelancerList()
activate RF
deactivate RF

TASK -> LTS** : create()

loop [for every freelancer]
TASK -> RF : freel = getFreelancer(i)
activate RF
deactivate RF

TASK -> TASK : amountsET = null

loop [for every task not payed]

TASK -> LT : ts = ltNotPayed.get(j)
activate LT
deactivate LT


TASK -> T : f = getFreelancer(ts)
activate T
deactivate T

opt [if freel == f]



TASK -> LTS : addAmountsET(ts)
activate LTS
deactivate LTS

end opt
end loop
opt [if amountsET != null]
TASK -> R** : create(amountsET)
end opt


TASK -> R : generateR(freel)
activate R
deactivate R
ref over R : UC7_SD_GenerateReceipt

end loop

deactivate TASK
@enduml