@startuml
skinparam classAttributeIconSize 0
hide methods
left to right direction

class Platform{
}
class Freelancer {
  -String freeID
  -String name
  -String levelExp
  -String email
  -String nif
  -String iban
  -String country
}

class Organization {
  -String nome
  -String email
  -String nif
}

class Collaborator{
  -String nome
  -String email
}

class Task {
  -String idT
  -String description
  -Time timeDuration
  -double costHour
  -String taskCategory
  -boolean isPayed
  -boolean isFinished
}

class Manager {
  -String nome
  -String email
}

class User {
}

class Receipt {
}

class Transaction {

}

class Address{
  -String street
  -String doorNumber
  -String city
}

class Administrator {
}

class Payment{
  -Time timeToPay
  -Data dateToPay
  -int nrDays
}

class Reader {
  -String fileName
}

class HistoricalTransaction{
}

class TaskExecution{
  -Data endDate
  -double delay
  -String descriptionOfQuality
  }

class Writer{
  -String fileName
  }

Freelancer "1" -- "1" Transaction: receive >
Freelancer "1" -- "1" Receipt: receives > 
Freelancer "1" -- "1..*" Payment: receives >
Freelancer "1" -- "1" Address: has >
Freelancer "1" -- "1" Writer: receives email from >

Task "1..*" -- "1" Freelancer: made by >


Platform "1" -- "1..*" Transaction: has >
Platform "1" -- "1" Administrator: has >
Platform "1" -- "1..*" Organization: has registered >
Platform "1" -- "1..*" Freelancer: has >
Platform "1" -- "1" Freelancer: sends email to >
Platform "1" -- "1" Collaborator: sends email to >
Platform "1" -- "1" Manager: sends email to >
Platform "1" -- "1" Writer : sends emails from >

Organization "1" -- "1" Address: has >
Organization "1" -- "1" Manager: has >
Organization "1" -- "1" Collaborator: has >
Organization "1" -- "1..*" Task: has >

Manager "1" -- "1" User: acts as >
Manager "1" -- "1" Payment: defines >
Manager "1" -- "1" Writer: receives email from >

Administrator "1" -- "1" Organization: registers >
Administrator "1" -- "1" User: acts as >
Administrator "1" -- "1" Collaborator: registers >
Administrator "1" -- "1" Manager: registers >
Administrator "1" -- "1" Writer: receives email from >

Transaction "1" -- "1" Task: has >
Transaction "1" -- "1" TaskExecution: has >


Payment "1" -- "1" Receipt: generate >
Payment "1" -- "1..*" Transaction : has >


Reader "1" -- "1..*" HistoricalTransaction: originates >

HistoricalTransaction "1" -- "1..*" Transaction: has >
HistoricalTransaction "1" -- "1..*" Freelancer: has >

Collaborator "1" -- "1" Freelancer: creates >
Collaborator "1" -- "1..*" Task: creates >
Collaborator "1" -- "1..*" Transaction: creates >
Collaborator "1" -- "1" User: acts as >
Collaborator "1" -- "1" HistoricalTransaction: loads >
Collaborator "1" -- "1" TaskExecution: introduces >
Collaborator "1" -- "1" Writer: receives email from >


TaskExecution "1" -- "1" Freelancer: related to the work of

Task "1" -- "1" TaskExecution : originates >

Receipt "1" -- "1" Writer : uses >
Receipt "1" -- "*" Transaction: has >




@enduml



