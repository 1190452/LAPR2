@startuml
autonumber
'hide footbox
actor "Manager" as ADM

participant ":PaymentUI" as UI
participant ":DefinePaymentController" as CTRL
participant "ApplicationPOT" as _APP
participant "app\n:ApplicationPOT" as APP
participant "log\n:UserSession" as SESSAO
participant "Platform" as P
participant "rorgs\n:RegisterOrganization" as RO
participant "org\n:Organization" as O
participant "dpay:DefinePayment" as DPAY

activate ADM
ADM -> UI : The manager of the organization selects the processment cycle of payment transactions.
activate UI

UI -> CTRL : getOrg()
activate CTRL

CTRL -> _APP : app = getInstance()
activate _APP
deactivate _APP

CTRL -> APP : plt = getPlatform()
activate APP
deactivate APP

CTRL -> P : rorgs = getRorgs()
activate P
deactivate P

CTRL -> APP : log = getActualSession()
activate APP
deactivate APP

CTRL -> SESSAO : email = getUserEmail()
activate SESSAO
deactivate SESSAO

CTRL -> RO : org = getOrganizationByUserEmailMan(email)
activate RO
deactivate RO

deactivate CTRL

UI --> ADM : The System asks for the day of the month, the time of the day and the recurrence time period (e.g. 7 days).
deactivate UI

ADM -> UI : The Manager inserts the information.
activate UI

UI -> CTRL : newDefinePayment(time, date, rtp)
activate CTRL

CTRL -> O : dpay = newDefinePayment(time, date, rtp)
activate O
O -> DPAY** : create(time, date, rtp)
deactivate O

CTRL -> O : validatesDefinePayment(dpay)
activate O
deactivate O

deactivate CTRL

UI --> ADM : shows the information and asks for confirmation.
deactivate UI

ADM -> UI : confirms the data
activate UI

UI -> CTRL : registerDefinePayment()
activate CTRL

CTRL -> DPAY : registersDefinePayment(dpay)
activate DPAY
DPAY -> DPAY : validatesDefinePayment(dpay)
deactivate DPAY
CTRL -> O : setDefinePayment(dpay)
activate O
deactivate O

CTRL -> P : schedulesPayment(email)
activate P
deactivate P

deactivate CTRL

UI -> ADM : informs about the success of the operation
deactivate UI
deactivate ADM

@enduml
